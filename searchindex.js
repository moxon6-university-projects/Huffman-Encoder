Search.setIndex({envversion:46,filenames:["index","src","src.binary_io","src.huffenc","src.huffenc_test"],objects:{"":{src:[1,0,0,"-"]},"src.binary_io":{create_binary_code_bytes:[2,1,1,""],create_encoded_data_string:[2,1,1,""],get_code_lengths_from_bytes:[2,1,1,""],get_encoded_data_string:[2,1,1,""],read_encoded_binary:[2,1,1,""],read_string_from_file:[2,1,1,""],write_encoded_binary:[2,1,1,""],write_string_to_file:[2,1,1,""]},"src.huffenc":{decode_file:[3,1,1,""],encode_file:[3,1,1,""],encode_string:[3,1,1,""],generate_code_length_map:[3,1,1,""],generate_code_lengths:[3,1,1,""],generate_frequency_table:[3,1,1,""],generate_symbol_mapping:[3,1,1,""],get_default_path:[3,1,1,""],get_minimum_frequency_pair:[3,1,1,""],increment_table:[3,1,1,""]},"src.huffenc_test":{MyTestCase:[4,2,1,""]},"src.huffenc_test.MyTestCase":{test_huffman_encoder:[4,3,1,""]},src:{binary_io:[2,0,0,"-"],huffenc:[3,0,0,"-"],huffenc_test:[4,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","function","Python function"],"2":["py","class","Python class"],"3":["py","method","Python method"]},objtypes:{"0":"py:module","1":"py:function","2":"py:class","3":"py:method"},terms:{"byte":[2,3],"case":4,"class":4,"default":3,"function":3,"int":3,"new":3,"return":[2,3],arrai:2,augment:3,auto:3,automat:3,base:4,binari:2,binary_io:[0,1],binary_str:2,bool:3,bound:3,byte_list:2,bytearrai:2,call:3,canon:3,canonical_cod:3,charact:2,code:[2,3],code_byt:2,code_length_map:[2,3],code_map:3,codeword:3,composit:3,content:0,creat:[2,3],create_binary_code_byt:2,create_encoded_data_str:2,data:2,data_byt:2,decod:[2,3],decode_fil:3,depth:3,determin:3,dict:[2,3],dictionari:[2,3],each:3,encode_fil:3,encode_str:3,entir:3,equival:3,fals:3,file:[2,3],freq:3,freq_tabl:3,frequenc:3,from:[2,3],gener:[2,3],generate_code_length:3,generate_code_length_map:3,generate_frequency_t:3,generate_symbol_map:3,get:3,get_code_lengths_from_byt:2,get_default_path:3,get_encoded_data_str:2,get_minimum_frequency_pair:3,huffenc:[0,1],huffenc_test:[0,1],huffman_tre:3,increment_t:3,index:0,input:[2,3],inspect:3,intermedi:3,invers:3,iter:3,last:2,len:3,length:[2,3],list:3,locat:2,map:[2,3],methodnam:4,min:3,minimum:3,minimum_frequency_pair:3,modul:[0,1],move:3,must:3,mytestcas:4,nest:3,order:2,output:3,over:3,packag:0,page:0,pair:3,paramet:[2,3],path:[2,3],path_in:[2,3],path_out:[2,3],point:3,read:2,read_encoded_binari:2,read_string_from_fil:2,recurs:3,repres:2,revers:3,runtest:4,s_n:3,same:2,search:0,side:3,sinc:[2,3],size:[2,3],sourc:[2,3,4],specifi:3,src:0,string:[2,3],string_in:[2,3],string_out:[2,3],submodul:0,symbol:[2,3],take:2,test_huffman_encod:4,testcas:4,them:2,tree:3,tree_depth:3,tupl:3,two:3,type:[2,3],unittest:4,valu:3,whether:3,write:2,write_encoded_binari:2,write_string_to_fil:2},titles:["Welcome to Martin&#8217;s Huffman Encoder&#8217;s documentation!","src package","src.binary_io module","src.huffenc module","src.huffenc_test module"],titleterms:{binary_io:2,document:0,encod:0,huffenc:3,huffenc_test:4,huffman:0,indic:0,martin:0,modul:[2,3,4],packag:1,src:[1,2,3,4],submodul:1,tabl:0,welcom:0}})